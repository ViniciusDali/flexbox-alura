/*Cabeçalho*/
.cabecalhoPrincipal .container {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.cabecalhoPrincipal-nav {
  display: flex;
}
/*Nossos Cursos*/
.conteudoPrincipal-cursos {
  display: flex;
  flex-wrap: wrap;
  /*justify-content: flex-start; não funcionou na aula, mas aqui funcionou, de toda forma, vamos fazer do jeito do professor */
}

.conteudoPrincipal-cursos-link {
  width: 23%;
  margin: 1%;
}

.conteudoPrincipal-cursos-link:nth-child(4n) {
  /* selecionar os elementos mutiplos de 4 */
  margin-right: 0;
}

.conteudoPrincipal-cursos-link:nth-child(4n + 1) {
  /* selecionar os elementos logo após os mutiplos de 4  */
  margin-left: 0;
}

/*Mapa de Cursos*/

.rodapePrincipal-navMap-list {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  /* flex-flow: column wrap;  esse é um atalho que substitui flex-direction e flex-wrap */
  height: 260px;
}

/*Roda pá principal*/
.rodapePrincipal-patrocinadores .container {
  display: flex;
  justify-content: space-between;
}

.rodapePrincipal-patrocinadores-list {
  display: flex;
  align-items: center;
  justify-content:space-around;
  width: 70%;
  margin-right: 5%;
}

.rodapePrincipal-contatoForm {
  width: 25%;
}

.rodapePrincipal-contatoForm-fieldset {
  display: flex;
}

.videoSobre .container {
  display: flex;
}

.videoSobre-sobre {
  text-align: center;
  display: flex;
  flex-direction: column;
  flex-grow: 2; /*Ele vai distribuir o elemento pelo número que colocarmos no flex-grow, exemplo: se eu tiver 4 elementos com flex-grow 1, ele vai dividir o espaço total por 4, e colocar cada elemento com 1/4 do tamanho total.*/
}

.videoSobre-video {
  flex-grow: 1;
}

.videoSobre-sobre-list {
  flex-grow: 1;
  flex-shrink: 2;
}

/* parte mobile */

@media (max-width: 768px) {
  .cabecalhoPrincipal-nav {
    flex-direction: column;
  }
  .cabecalhoPrincipal .container {
    flex-direction: column;
    align-items: initial;
    text-align: center;
  }

  .conteudoPrincipal-cursos {
    flex-direction: column;
  }

  .conteudoPrincipal-cursos-link {
    width: 100%;
  }

  .cabecalhoPrincipal-nav-link-app {
    order: -1; /* order serve para mudar a ordem de algum elemento, nesse caso, no menu, o elemento NOSSO APP, que era o ultimo elemento do menu, vai ser o primeiro, acima de MENU, por padrão todos os elementos vem com order 0 */
  }

  .videoSobre .container {
    flex-direction: column;
  }

  .videoSobre-video {
    margin: 0 auto;
  }

  .rodapePrincipal-navMap-list {
    height: auto;
  }

  .rodapePrincipal-patrocinadores .container {
    flex-direction: column;
    align-items: center;
  }

  .rodapePrincipal-patrocinadores-list {
    margin: 0;
    width: 100%;
    flex-wrap: wrap;
  }

  .rodapePrincipal-contatoForm {
    width: 100%;
  }

  .rodapePrincipal-contatoForm-fieldset {
    justify-content: center;
  }
}

/* 
container:
display: flex
flex-direction
justify-content
flex-wrap
flex-flow
align-items
align-content

flex item:
order

flex-grow - Ele vai distribuir o elemento pelo número que colocarmos no flex-grow, exemplo: se eu tiver 4 elementos com flex-grow 1, ele vai dividir o espaço total por 4, e colocar cada elemento com 1/4 do tamanho total. Por padrão o flex-grow é 0.

flex-shrink - É o inverso do flex-grow, faz com que os elementos diminuam de tamanha, exemplo: se você tiver 4 elementos com 50 px (total de 200px) e diminuir a tela para 100 px, todos os elementos por padrão vão para 25 px, caso você coloque flex-shrink: 2 no primeiro elemento, ele vai diminuir o dobro, ficando com 10 px, e o restante dos elementos com 30px cada (total de 100px). se colocar flex-shrink 0, os elementos não dimuniem.

flex-basis - Recebe um número absoluto, tipo 200 px, basicamente a mesma coisa do width.

flex - Flex é um atalho para flex-grow, flex-shrink e basis, exemplo: flex: 1 2 25% o primeiro número é o grow, o segundo é o shrink e o 25% é o.

align-self
*/
